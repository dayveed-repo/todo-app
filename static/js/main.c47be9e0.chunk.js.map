{"version":3,"sources":["Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","todo","newer","todos","settodos","className","completed","title","onClick","map","item","id","filter","App","useState","value","setvalue","onSubmit","e","input","preventDefault","uid","type","onChange","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTA+BeA,MA1Bf,YAAiD,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAehC,OACI,sBAAKC,UAAU,OAAf,UACI,oBAAIA,UAAS,UAAKJ,EAAKK,UAAY,YAAc,IAAjD,SAAyDL,EAAKM,QAC9D,gCACA,cAAC,IAAD,CAAUC,QAjBM,WACpBJ,EAASD,EAAMM,KAAI,SAAAC,GACf,OAAGA,EAAKC,KAAOT,EACJ,2BAAKQ,GAAZ,IAAkBJ,WAAYI,EAAKJ,YAE5BI,SAaX,cAAC,IAAD,CAAYF,QARC,WACjBJ,EAASD,EAAMS,QAAQ,SAAAF,GAAI,OAAIA,EAAKC,IAAMT,gBCsBnCW,MAnCf,WAAgB,IAAD,EACcC,mBAAS,IADvB,mBACLC,EADK,KACEC,EADF,OAEaF,mBAAS,IAFtB,mBAENX,EAFM,KAECC,EAFD,KAeb,OACE,qBAAKC,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACA,0CAEE,uBAAMY,SAXO,SAAAC,GALL,IAAAC,EAMZD,EAAEE,iBALQ,MADED,EAOJJ,IALRX,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAEI,MAAOY,EAAOb,WAAW,EAAOK,GAAIU,YAAIF,OAM9DH,EAAS,KAQL,UACE,uBAAOM,KAAK,OAAQjB,UAAU,QAAQU,MAAOA,EAAOQ,SAAW,SAAAL,GAAC,OAAIF,EAASE,EAAEM,OAAOT,UACtF,uBAAOO,KAAK,SAASjB,UAAU,iBAEnC,qBAAKA,UAAU,WAAf,SAEIF,EAAMM,KAAI,SAACR,GAAD,OAAW,cAAC,EAAD,CAAoBC,MAAOD,EAAKU,GAAIV,KAAMA,EAAME,MAAOA,EAAOC,SAAUA,GAA7DH,EAAKU,SAGvC,wBAAQH,QAAS,kBAAMJ,EAAS,KAAhC,yBCtBKqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c47be9e0.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Todo.css'\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nfunction Todo({ todo, newer, todos, settodos }) {\r\n\r\n    const handlecompleted = () =>{\r\n        settodos(todos.map(item => {\r\n            if(item.id === newer){\r\n                return { ...item, completed: !item.completed }\r\n            }{\r\n                return item\r\n            }\r\n        }))\r\n    }\r\n\r\n    const handleDelete = () =>{\r\n        settodos(todos.filter( item => item.id != newer))\r\n    }\r\n    return (\r\n        <div className=\"Todo\">\r\n            <h2 className={`${todo.completed ? \"completed\" : \"\" }`}>{todo.title}</h2>\r\n            <div>\r\n            <DoneIcon onClick={handlecompleted} />\r\n            <DeleteIcon onClick={handleDelete} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React, { useState } from 'react';\nimport { uid } from \"react-uid\"\nimport './App.css'\nimport Todo from './Todo.js';\n\nfunction App() {\n   const [value, setvalue] = useState(\"\")\n  const [todos, settodos] = useState([]) \n\n  const addtodo = input =>{\n    if(input !==\"\"){\n      settodos([...todos, { title: input, completed: false, id: uid(input) }])\n    }\n  }\n  const handleSubmit = e => {\n      e.preventDefault()\n      addtodo(value)\n      setvalue(\"\")\n  }\n\n  return (\n    <div className=\"App\">\n        <div className=\"subApp\">\n        <h1>TODO App</h1>\n        \n          <form onSubmit={handleSubmit}>\n            <input type=\"text\"  className=\"addto\" value={value} onChange={ e => setvalue(e.target.value)}/>\n            <input type=\"submit\" className=\"clicktodo\" />\n          </form>\n        <div className=\"todoList\"> \n          {\n            todos.map((todo) =>  <Todo key={todo.id} newer={todo.id} todo={todo} todos={todos} settodos={settodos}/>)\n          } \n        </div>\n          <button onClick={() => settodos([])}>clear</button>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}